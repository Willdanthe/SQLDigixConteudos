CREATE TABLE IF NOT EXISTS AU5.INSTRUTOR(
    IDINSTRUTOR INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    NOME VARCHAR(45),
    RG VARCHAR(14),
    NASCIMENTO DATE NOT NULL,
    TITULACAO INT NOT NULL,

    UNIQUE(RG)
);

CREATE TABLE IF NOT EXISTS AU5.TELEFONE_INSTRUTOR(
    IDTELEFONE INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    NUMERO VARCHAR(45),
    TIPO VARCHAR(45),
    INSTRUTORID INT,
    CONSTRAINT TELEFONE_DO_INSTRUTOR FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE
);
-- INSERT INTO AU5.instrutor(RG,NASCIMENTO,TITULACAO) VALUES ('2436973','1990-05-05',23213);

CREATE TABLE IF NOT EXISTS AU5.ATIVIDADE(
    IDATIVIDADE INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS AU5.TURMA(
    IDTURMA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(45),
    HORARIO TIME,
    DURACAO INT,
    DATAINICO DATE,
    DATAFIM DATE,
    INSTRUTORID INT,
    ATIVIDADEID INT,

    CONSTRAINT INSTRUTOR_TURMA FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE,
    CONSTRAINT ATIVIDADE_TURMA FOREIGN KEY(ATIVIDADEID) REFERENCES AU5.ATIVIDADE(IDATIVIDADE) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU5.ALUNO(
    CODMATRICULA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    TURMAID INT,
    DATAMATRICULA DATE NOT NULL,
    NOME VARCHAR(45) NOT NULL,
    ENDERECO TEXT,
    TELEFONE INT,
    DATANASCIMENTO DATE,
    ALTURA DECIMAL(3,2),
    PESO DECIMAL(3,1),

    CONSTRAINT TURMA_DO_ALUNO FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU5.CHAMADA(
    IDCHAMADA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    DATA DATE NOT NULL DEFAULT CURRENT_DATE,
    PRESENTE BOOL,
    MATRICULACOD INT,
    TURMAID INT,

    CONSTRAINT ALUNO_CHAMADA FOREIGN KEY(MATRICULACOD) REFERENCES AU5.ALUNO(CODMATRICULA) ON DELETE CASCADE,
    CONSTRAINT TURMA_CHAMADA FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE
);

-- POVOANDO:
-- Populando a tabela INSTRUTOR
INSERT INTO AU5.INSTRUTOR (NOME, RG, NASCIMENTO, TITULACAO) VALUES 
('João Silva', '123456789', '1980-01-01', 1),
('Maria Oliveira', '987654321', '1985-02-02', 2);

-- Populando a tabela TELEFONE_INSTRUTOR
INSERT INTO AU5.TELEFONE_INSTRUTOR (NUMERO, TIPO, INSTRUTORID) VALUES 
('1234-5678', 'Residencial', 1),
('8765-4321', 'Celular', 2);

-- Populando a tabela ATIVIDADE
INSERT INTO AU5.ATIVIDADE (NOME) VALUES 
('Yoga'),
('Pilates');

-- Populando a tabela TURMA
INSERT INTO AU5.TURMA (NOME, HORARIO, DURACAO, DATAINICO, DATAFIM, INSTRUTORID, ATIVIDADEID) VALUES 
('Turma A', '08:00:00', 60, '2025-01-01', '2025-06-01', 1, 1),
('Turma B', '10:00:00', 60, '2025-01-01', '2025-06-01', 2, 2);

-- Populando a tabela ALUNO com mais registros
INSERT INTO AU5.ALUNO (TURMAID, DATAMATRICULA, NOME, ENDERECO, TELEFONE, DATANASCIMENTO, ALTURA, PESO) VALUES 
(1, '2025-01-01', 'Carlos Souza', 'Rua A, 123', 123456789, '2000-01-01', 1.75, 70.5),
(2, '2025-01-01', 'Ana Lima', 'Rua B, 456', 987654321, '1995-02-02', 1.65, 60.0),
(1, '2025-01-02', 'Pedro Santos', 'Rua C, 789', 112233445, '1998-03-03', 1.80, 75.0),
(2, '2025-01-02', 'Mariana Costa', 'Rua D, 101', 223344556, '1997-04-04', 1.70, 65.0),
(1, '2025-01-03', 'Lucas Almeida', 'Rua E, 202', 334455667, '1996-05-05', 1.85, 80.0),
(2, '2025-01-03', 'Fernanda Ribeiro', 'Rua F, 303', 445566778, '1994-06-06', 1.60, 55.0);

-- Populando a tabela CHAMADA com mais registros
INSERT INTO AU5.CHAMADA (DATA, PRESENTE, MATRICULACOD, TURMAID) VALUES 
('2025-02-01', TRUE, 1, 2),
('2025-02-01', FALSE, 2, 2),
('2025-02-02', TRUE, 3, 1),
('2025-02-02', TRUE, 4, 2),
('2025-02-03', FALSE, 5, 1),
('2025-02-03', TRUE, 6, 2),
('2025-02-04', TRUE, 7, 1),
('2025-02-04', FALSE, 8, 2);

SELECT * FROM AU5.aluno;
SELECT * FROM AU5.TURMA;
SELECT * FROM AU5.CHAMADA;

-- 1) Listar todos os alunos e os nomes das turmas em que estão matriculados
SELECT DISTINCT A.NOME AS "Aluno", T.NOME AS "Turma" FROM AU5.ALUNO A
JOIN AU5.TURMA T on A.TURMAID = T.IDTURMA;

-- 2) Contar quantos alunos estão matriculados em cada turma
SELECT T.NOME AS "Turma", COUNT(A.CODMATRICULA) FROM AU5.turma T
JOIN AU5.ALUNO A ON A.turmaid = T.idturma
GROUP BY T.NOME;

-- 3) 3️. Mostrar a média de idade dos alunos em cada turma
SELECT T.NOME AS "Turma", ROUND(AVG(EXTRACT(YEAR FROM AGE(DATANASCIMENTO))),2) AS "Idade" 
FROM AU5.TURMA T
JOIN AU5.ALUNO A ON A.turmaid = T.idturma
GROUP BY T.NOME;

--Teste
-- SELECT T.NOME AS "Turma", ROUND(AVG(EXTRACT(YEAR FROM AGE(CURRENT_DATE, DATANASCIMENTO))),2) AS "Idade" FROM AU5.ALUNO A
-- JOIN AU5.TURMA T ON A.turmaid = T.idturma
-- JOIN AU5.CHAMADA C ON A.codmatricula = C.matriculacod
-- GROUP BY T.NOME;
--Teste

-- PROFESSOR RESPOSTA
SELECT T.IDTURMA AS TURMA,
    ROUND(AVG(EXTRACT (YEAR FROM AGE(CURRENT_DATE, DATANASCIMENTO))),2) AS IDADE_MEDIA
    FROM AU5.aluno A
JOIN AU5.chamada C ON A.codmatricula = C.matriculacod
JOIN AU5.TURMA T ON C.turmaid = T.idturma
GROUP BY T.idturma
ORDER BY IDADE_MEDIA;


-- 6️) Encontrar alunos que frequentaram todas as aulas de sua turma
SELECT a.nome as "Aluno", t.idturma as "Turma" from au5.aluno a
join au5.chamada c on a.codmatricula = c.matriculacod
join au5.turma t on c.turmaid = t.idturma
group by a.codmatricula, t.idturma
having count(case when c.presente = true then 1 end) =
(SELECT count(*) from au5.chamada c2 where c2.turmaid = t.idturma);

-- 8️) Listar os alunos que estão matriculados em mais de uma turma
SELECT A.NOME AS "Aluno", COUNT (DISTINCT T.IDTURMA) AS "Quantidade Turmas"
FROM AU5.ALUNO A
JOIN AU5.CHAMADA C ON A.CODMATRICULA = C.MATRICULACOD
JOIN AU5.TURMA T ON C.TURMAID = T.IDTURMA
GROUP BY A.CODMATRICULA, A.NOME
having COUNT(DISTINCT T.IDTURMA) > 1;

-- 9) Encontrar as turmas que possuem a maior quantidade de alunos
SELECT T.IDTURMA AS "TURMA", COUNT(A.CODMATRICULA) AS QNTALUNOS 
FROM AU5.ALUNO A
JOIN AU5.CHAMADA C ON A.CODMATRICULA = C.MATRICULACOD
JOIN AU5.TURMA T ON C.TURMAID = T.IDTURMA
GROUP BY T.IDTURMA
ORDER BY QNTALUNOS DESC LIMIT 1;



/*
SELECT EXTRACT(YEAR FROM AGE(A.DATANASCIMENTO)) AS year_difference FROM AU5.ALUNO A WHERE A.codmatricula = 1;

Desabilitar restrições de chave estrangeira
ALTER TABLE AU5.CHAMADA DROP CONSTRAINT ALUNO_CHAMADA;
ALTER TABLE AU5.CHAMADA DROP CONSTRAINT TURMA_CHAMADA;
ALTER TABLE AU5.ALUNO DROP CONSTRAINT TURMA_DO_ALUNO;
ALTER TABLE AU5.TELEFONE_INSTRUTOR DROP CONSTRAINT TELEFONE_DO_INSTRUTOR;
ALTER TABLE AU5.TURMA DROP CONSTRAINT INSTRUTOR_TURMA;
ALTER TABLE AU5.TURMA DROP CONSTRAINT ATIVIDADE_TURMA;

Drop table au5.instrutor;
Drop table au5.telefone_instrutor;
Drop table au5.turma;
Drop table au5.ATIVIDADE;
Drop table au5.chamada;
Drop table au5.aluno;


-- Truncar as tabelas
TRUNCATE AU5.CHAMADA;
TRUNCATE AU5.ALUNO;
TRUNCATE AU5.TURMA;
TRUNCATE AU5.ATIVIDADE;
TRUNCATE AU5.TELEFONE_INSTRUTOR;
TRUNCATE AU5.INSTRUTOR;

-- Reabilitar restrições de chave estrangeira
ALTER TABLE AU5.CHAMADA ADD CONSTRAINT ALUNO_CHAMADA FOREIGN KEY(MATRICULACOD) REFERENCES AU5.ALUNO(CODMATRICULA) ON DELETE CASCADE;
ALTER TABLE AU5.CHAMADA ADD CONSTRAINT TURMA_CHAMADA FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE;
ALTER TABLE AU5.ALUNO ADD CONSTRAINT TURMA_DO_ALUNO FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE;
ALTER TABLE AU5.TELEFONE_INSTRUTOR ADD CONSTRAINT TELEFONE_DO_INSTRUTOR FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE;
ALTER TABLE AU5.TURMA ADD CONSTRAINT INSTRUTOR_TURMA FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE;
ALTER TABLE AU5.TURMA ADD CONSTRAINT ATIVIDADE_TURMA FOREIGN KEY(ATIVIDADEID) REFERENCES AU5.ATIVIDADE(IDATIVIDADE) ON DELETE CASCADE;
*/