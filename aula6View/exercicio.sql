CREATE TABLE IF NOT EXISTS au6.PESSOA(
    IDPESSOA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(200),
    CPF CHAR(11) UNIQUE
);

CREATE TABLE IF NOT EXISTS AU6.UNIDADE_RESIDENCIAL(
    IDUNIDADE INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(200),
    NUMQUARTOS SMALLINT,
    NUMBANHEIRO SMALLINT,
    PROPRIETARIO INT,

    CONSTRAINT PESSOA_UNIDADE FOREIGN KEY(PROPRIETARIO) REFERENCES AU6.PESSOA(IDPESSOA) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU6.ENGENHEIRO(
    IDENGENHEIRO INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CREA INT NOT NULL,
    PESSOAID INT,

    CONSTRAINT PESSOA_ENGENHEIRO FOREIGN KEY(PESSOAID) REFERENCES AU6.PESSOA(IDPESSOA) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU6.EDIFICACAO(
    IDEDIFICACAO INT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
    NOME VARCHAR(200),
    METRAGEMTOTAL DECIMAL,
    ENDERECO TEXT,
    RESPONSAVEL INT,
    CONSTRAINT ENGENHEIRO_EDIFICACAO FOREIGN KEY(RESPONSAVEL) REFERENCES AU6.ENGENHEIRO(IDENGENHEIRO) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS AU6.UNIDADE_EDIFICACAO(
    UNIDADEID INT,
    EDIFICACAOID INT,

    PRIMARY KEY (UNIDADEID, EDIFICACAOID),
    CONSTRAINT UNIDADE_EDIFICACAO FOREIGN KEY(UNIDADEID) REFERENCES AU6.UNIDADE_RESIDENCIAL(IDUNIDADE) ON DELETE CASCADE,
    CONSTRAINT EDIFICACAO_UNIDADE FOREIGN KEY(EDIFICACAOID) REFERENCES AU6.EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU6.PREDIO(
    IDPREDIO INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(255),
    NUMANDARES SMALLINT,
    APPORANDAR SMALLINT,
    EDIFICACAOID INT UNIQUE,

    CONSTRAINT EDIFICACAO_PREDIO FOREIGN KEY(EDIFICACAOID) REFERENCES AU6.EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU6.CASA(
    IDCASA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(255),
    CONDOMINIO BOOLEAN,
    EDIFICACAOID INT UNIQUE,

    CONSTRAINT EDIFICACAO_CASA FOREIGN KEY(EDIFICACAOID) REFERENCES AU6.EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS AU6.PREDIO_EDIFICACAO_CASA(
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    EDIFICACAOID INT UNIQUE,
    ISCASA BOOLEAN,
    CASAID INT,
    PREDIOID INT,

    CONSTRAINT PREDIO_EDIFICACAO_CASA FOREIGN KEY(PREDIOID) REFERENCES AU6.PREDIO(IDPREDIO) ON DELETE CASCADE,
    CONSTRAINT CASA_EDIFICACAO_PREDIO FOREIGN KEY(CASAID) REFERENCES AU6.CASA(IDCASA) ON DELETE CASCADE,
    CONSTRAINT EDIFICACAO_CASA_PREDIO FOREIGN KEY(EDIFICACAOID) REFERENCES AU6.EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE,

    CHECK(
        (ISCASA = TRUE AND CASAID IS NOT NULL AND PREDIOID IS NULL) 
        OR
        (ISCASA = FALSE AND PREDIOID IS NOT NULL AND CASAID IS NULL) 
    )
);
--POVOANDO
INSERT INTO au6.PESSOA (NOME, CPF) VALUES 
('Carlos Silva', '12345678901'),
('Mariana Souza', '23456789012'),
('Rafael Lima', '34567890123'),
('Thiago Owsceviskseilakkkkk', '34567890153'),
('Bruno Barreto', '34567890623'),
('Beatriz Mendes', '45678901234');

INSERT INTO au6.ENGENHEIRO (CREA, PESSOAID) VALUES 
(1001, 5),
(1003, 6),
(1002, 8);

SELECT * FROM AU6.engenheiro;

INSERT INTO au6.EDIFICACAO (NOME, METRAGEMTOTAL, ENDERECO, RESPONSAVEL) VALUES 
('Edifício Alpha', 1500.5, 'Rua A, 123', 10),
('Edifício Beta', 2000.75, 'Rua B, 456', 11),
('Casa Verde', 250.3, 'Rua C, 789', 12);

SELECT * FROM AU6.edificacao;

INSERT INTO au6.UNIDADE_RESIDENCIAL (NOME, NUMQUARTOS, NUMBANHEIRO, PROPRIETARIO) VALUES 
('Apartamento 101', 2, 1, 10),
('Apartamento 202', 3, 2, 9),
('Casa 01', 4, 3, 7);

INSERT INTO au6.UNIDADE_EDIFICACAO (UNIDADEID, EDIFICACAOID) VALUES 
(4, 13),
(5, 14),
(6, 15);

SELECT * FROM AU6.UNIDADE_EDIFICACAO;
SELECT * FROM AU6.unidade_residencial;
SELECT * FROM AU6.EDIFICACAO;

INSERT INTO au6.PREDIO (NOME, NUMANDARES, APPORANDAR, EDIFICACAOID) VALUES 
('Edifício Alpha', 10, 4, 13),
('Edifício Beta', 15, 6, 14);

INSERT INTO au6.CASA (NOME, CONDOMINIO, EDIFICACAOID) VALUES 
('Casa Verde', TRUE, 15);

SELECT * FROM AU6.PREDIO;
SELECT * FROM AU6.CASA;

INSERT INTO au6.PREDIO_EDIFICACAO_CASA (EDIFICACAOID, ISCASA, CASAID, PREDIOID) VALUES 
(13, FALSE, NULL, 1),
(14, FALSE, NULL, 2),
(15, TRUE, 1, NULL);

-- SELECT
SELECT * FROM AU6.PESSOA;




-- PROFESSOR

CREATE TABLE PESSOA(
    CPF VARCHAR(14) PRIMARY KEY,
    NOME VARCHAR(11) NOT NULL
);

CREATE TABLE ENGENHEIRO(
    CPF VARCHAR(14) PRIMARY KEY,
    CREA VARCHAR(10) NOT NULL,

    FOREIGN KEY(CPF) REFERENCES PESSOA(CPF) ON DELETE CASCADE
    -- ON DELETE CASCADE: SE A PESSOA FOR DELETADA, O ENGENHEIRO TAMBÉM É DLETADO
);

CREATE TABLE EDIFICACAO(
    IDEDIFICACAO SERIAL PRIMARY KEY,
    METRAGEMTOTAL FLOAT NOT NULL,
    ENDERECO VARCHAR(255) NOT NULL,
    RESPONSAVELCPF VARCHAR(14) NOT NULL,

    FOREIGN KEY(RESPONSAVELCPF) REFERENCES ENGENHEIRO(CPF) ON DELETE CASCADE
);

CREATE TABLE UNIDADERESIDENCIAL(
    IDUNIDADE SERIAL PRIMARY KEY,
    METRAGEMUNIDADE FLOAT NOT NULL,
    NUMQUARTOS INT NOT NULL,
    NUMBANHEIRO INT NOT NULL,
    PROPRIETARIOCPF VARCHAR(14) NOT NULL,
    IDEDIFICACAO INT NOT NULL,
    FOREIGN KEY(PROPRIETARIOCPF) REFERENCES PESSOA(CPF) ON DELETE CASCADE, 
    FOREIGN KEY(IDEDIFICACAO) REFERENCES EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE 
);

CREATE TABLE PREDIO(
    IDEDIFICACAO SERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL,
    NUMANDARES INT NOT NULL,

    FOREIGN KEY (IDEDIFICACAO) REFERENCES EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);

CREATE TABLE CASA(
    IDEDIFICACAO SERIAL PRIMARY KEY,
    CONDOMINIO BOOLEAN NOT NULL,

    FOREIGN KEY(IDEDIFICACAO) REFERENCES EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);

CREATE TABLE CASASOBRADO(
    IDEDIFICACAO SERIAL PRIMARY KEY,
    NUMANDARES INT NOT NULL,

    FOREIGN KEY(IDEDIFICACAO) REFERENCES EDIFICACAO(IDEDIFICACAO) ON DELETE CASCADE
);

-- 1 LISTAR TODAS AS UNIDADES RESIDENCIASIS COM SEUS PROPRIETÁRIOS E ENDEREÇOS
SELECT * FROM UNIDADERESIDENCIAL U
JOIN pessoa P ON U.proprietario = P.cpf
JOIN edificacao E ON U.idedificacao = E.idedificacao;

-- 2 LISTAR TODAS AS UNIDADES RESIDENCIAIS COM SEUS PROPRIETÁRIOS
-- E ENDEREÇOS, ORDENANDO POR METRAGEM DA UNIDADE

SELECT * FROM UNIDADERESIDENCIAL U
JOIN pessoa P ON U.proprietario = P.cpf
JOIN edificacao E ON U.idedificacao = E.idedificacao
ORDER BY U.METRAGEMUNIDADE;


-- SELECT * FROM AU6.unidade_residencial U
-- JOIN AU6.PESSOA P ON U.proprietario = E.IDEDIFICACAO
-- JOIN AU6.edificacao E ON U.

