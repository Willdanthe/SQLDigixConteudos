CREATE TABLE IF NOT EXISTS AU5.INSTRUTOR(
    IDINSTRUTOR INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    NOME VARCHAR(45),
    RG VARCHAR(14),
    NASCIMENTO DATE NOT NULL,
    TITULACAO INT NOT NULL,

    UNIQUE(RG)
);

CREATE TABLE IF NOT EXISTS AU5.TELEFONE_INSTRUTOR(
    IDTELEFONE INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    NUMERO VARCHAR(45),
    TIPO VARCHAR(45),
    INSTRUTORID INT,
    CONSTRAINT TELEFONE_DO_INSTRUTOR FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE
);
-- INSERT INTO AU5.instrutor(RG,NASCIMENTO,TITULACAO) VALUES ('2436973','1990-05-05',23213);

CREATE TABLE IF NOT EXISTS AU5.ATIVIDADE(
    IDATIVIDADE INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS AU5.TURMA(
    IDTURMA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(45),
    HORARIO TIME,
    DURACAO INT,
    DATAINICO DATE,
    DATAFIM DATE,
    INSTRUTORID INT,
    ATIVIDADEID INT,

    CONSTRAINT INSTRUTOR_TURMA FOREIGN KEY(INSTRUTORID) REFERENCES AU5.INSTRUTOR(IDINSTRUTOR) ON DELETE CASCADE,
    CONSTRAINT ATIVIDADE_TURMA FOREIGN KEY(ATIVIDADEID) REFERENCES AU5.ATIVIDADE(IDATIVIDADE) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU5.ALUNO(
    CODMATRICULA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    TURMAID INT,
    DATAMATRICULA DATE NOT NULL,
    NOME VARCHAR(45) NOT NULL,
    ENDERECO TEXT,
    TELEFONE INT,
    DATANASCIMENTO DATE,
    ALTURA DECIMAL(3,2),
    PESO DECIMAL(3,1),

    CONSTRAINT TURMA_DO_ALUNO FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS AU5.CHAMADA(
    IDCHAMADA INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    DATA DATE NOT NULL DEFAULT CURRENT_DATE,
    PRESENTE BOOL,
    MATRICULACOD INT,
    TURMAID INT,

    CONSTRAINT ALUNO_CHAMADA FOREIGN KEY(MATRICULACOD) REFERENCES AU5.ALUNO(CODMATRICULA) ON DELETE CASCADE,
    CONSTRAINT TURMA_CHAMADA FOREIGN KEY(TURMAID) REFERENCES AU5.TURMA(IDTURMA) ON DELETE CASCADE
);

-- POVOANDO:
-- Populando a tabela INSTRUTOR
INSERT INTO AU5.INSTRUTOR (NOME, RG, NASCIMENTO, TITULACAO) VALUES 
('João Silva', '123456789', '1980-01-01', 1),
('Maria Oliveira', '987654321', '1985-02-02', 2);

-- Populando a tabela TELEFONE_INSTRUTOR
INSERT INTO AU5.TELEFONE_INSTRUTOR (NUMERO, TIPO, INSTRUTORID) VALUES 
('1234-5678', 'Residencial', 1),
('8765-4321', 'Celular', 2);

-- Populando a tabela ATIVIDADE
INSERT INTO AU5.ATIVIDADE (NOME) VALUES 
('Yoga'),
('Pilates');

-- Populando a tabela TURMA
INSERT INTO AU5.TURMA (NOME, HORARIO, DURACAO, DATAINICO, DATAFIM, INSTRUTORID, ATIVIDADEID) VALUES 
('Turma A', '08:00:00', 60, '2025-01-01', '2025-06-01', 1, 1),
('Turma B', '10:00:00', 60, '2025-01-01', '2025-06-01', 2, 2);

-- Populando a tabela ALUNO com mais registros
INSERT INTO AU5.ALUNO (TURMAID, DATAMATRICULA, NOME, ENDERECO, TELEFONE, DATANASCIMENTO, ALTURA, PESO) VALUES 
(1, '2025-01-01', 'Carlos Souza', 'Rua A, 123', 123456789, '2000-01-01', 1.75, 70.5),
(2, '2025-01-01', 'Ana Lima', 'Rua B, 456', 987654321, '1995-02-02', 1.65, 60.0),
(1, '2025-01-02', 'Pedro Santos', 'Rua C, 789', 112233445, '1998-03-03', 1.80, 75.0),
(2, '2025-01-02', 'Mariana Costa', 'Rua D, 101', 223344556, '1997-04-04', 1.70, 65.0),
(1, '2025-01-03', 'Lucas Almeida', 'Rua E, 202', 334455667, '1996-05-05', 1.85, 80.0),
(2, '2025-01-03', 'Fernanda Ribeiro', 'Rua F, 303', 445566778, '1994-06-06', 1.60, 55.0);

-- Populando a tabela CHAMADA com mais registros
INSERT INTO AU5.CHAMADA (DATA, PRESENTE, MATRICULACOD, TURMAID) VALUES 
('2025-02-01', TRUE, 1, 2),
('2025-02-01', FALSE, 2, 2),
('2025-02-02', TRUE, 3, 1),
('2025-02-02', TRUE, 4, 2),
('2025-02-03', FALSE, 5, 1),
('2025-02-03', TRUE, 6, 2),
('2025-02-04', TRUE, 7, 1),
('2025-02-04', FALSE, 8, 2);

-- 8) Listar os alunos que estão matriculados em mais de uma turma
-- or replace é quando cria uma nova view ou substitui a existente (Não sendo obrigatório na sintáxe)
CREATE OR REPLACE VIEW au5.ALUNO_TURMA AS 
SELECT A.NOME AS "Aluno", COUNT (DISTINCT T.IDTURMA) AS "Quantidade Turmas"
FROM AU5.ALUNO A
JOIN AU5.CHAMADA C ON A.CODMATRICULA = C.MATRICULACOD
JOIN AU5.TURMA T ON C.TURMAID = T.IDTURMA
GROUP BY A.CODMATRICULA, A.NOME
having COUNT(DISTINCT T.IDTURMA) > 1;

-- Chamando as views
SELECT * FROM au5.aluno_turma;
SELECT "Aluno" FROM au5.aluno_turma;

-- Deletando as views
DROP VIEW ALUNO_TURMA;

-- Editar (replace)
CREATE OR REPLACE VIEW au5.ALUNO_TURMA AS 
SELECT A.NOME AS "Aluno", COUNT (DISTINCT T.IDTURMA) AS "Quantidade Turmas"
FROM AU5.ALUNO A
JOIN AU5.CHAMADA C ON A.CODMATRICULA = C.MATRICULACOD
JOIN AU5.TURMA T ON C.TURMAID = T.IDTURMA
GROUP BY A.CODMATRICULA, A.NOME
having COUNT(DISTINCT T.IDTURMA) > 4;

--- Praticando ---
CREATE OR REPLACE VIEW AU5.TURMA_MAIS_ALUNOS AS
SELECT T.IDTURMA AS "TURMA", COUNT(A.CODMATRICULA) AS QNTALUNOS 
FROM AU5.ALUNO A
JOIN AU5.CHAMADA C ON A.CODMATRICULA = C.MATRICULACOD
JOIN AU5.TURMA T ON C.TURMAID = T.IDTURMA
GROUP BY T.IDTURMA
ORDER BY QNTALUNOS DESC LIMIT 1;

SELECT * FROM AU5.turma_mais_alunos;

DROP VIEW AU5.turma_mais_alunos;
--- Praticando ---

-- View Materializada é de fato a criação de uma tabela de acordo com a consulta.
CREATE MATERIALIZED VIEW AU5.VM_TOTAL_PRESENCAS AS
SELECT T.NOME AS "Turma", ROUND(AVG(EXTRACT(YEAR FROM AGE(DATANASCIMENTO))),2) AS "Idade" 
FROM AU5.TURMA T
JOIN AU5.ALUNO A ON A.turmaid = T.idturma
GROUP BY T.NOME;

SELECT * FROM AU5.VM_TOTAL_PRESENCAS;

INSERT INTO AU5.aluno (TURMAID, DATAMATRICULA, NOME, ENDERECO, TELEFONE, DATANASCIMENTO, ALTURA, PESO) VALUES 
(1, '2020-02-10', 'Felipe Mendonza', 'Rua A, 123', 1234559, '2015-02-01', 1.75, 70.5);

REFRESH MATERIALIZED VIEW AU5.VM_TOTAL_PRESENCAS;

-- Simular view Materializada 
CREATE TABLE AU5.VM_TOTAL_PRESENCAS1 (
    ALUNO VARCHAR(200),
    IDADE NUMERIC
);

-- Vou inserir os dados de acordo com uma consulta
-- Aqui estamos inserindo na tabela os valores de consulta com as respectivas colunas
INSERT INTO au5.VM_TOTAL_PRESENCAS1
SELECT T.NOME AS "Turma", ROUND(AVG(EXTRACT(YEAR FROM AGE(DATANASCIMENTO))),2) AS "Idade" 
FROM AU5.TURMA T
JOIN AU5.ALUNO A ON A.turmaid = T.idturma
GROUP BY T.NOME;







-- TESTE
CREATE OR REPLACE VIEW AU5.TODOSALUNOS AS
SELECT NOME AS "ALUNOS" FROM AU5.ALUNO;

SELECT * FROM AU5.todosalunos;

DROP VIEW AU5.todosalunos;
-- TESTE




